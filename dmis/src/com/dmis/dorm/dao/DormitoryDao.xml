<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"../../../../mybatis-3-mapper.dtd">

<mapper namespace="com.dmis.dorm.dao.DormitoryDao">
	
	<select id="getListQuery" parameterType="pageUtil" resultType="dormitory">
		select d.*,b.name as buildName,dt.maxNum,dp1.alreadyNum from dormitory d 
		left join building b on b.id=d.buildId 
		left join dorm_type dt on dt.id=d.dormType
		left join (select dp.dormId,count(dp.dormId)as alreadyNum from dorm_person dp GROUP BY dp.dormId)dp1
			on dp1.dormId=d.id
		where 1=1 
		<foreach collection="where" item="wh">
			and ${wh.parm} ${wh.op} #{wh.value} 
		</foreach>
		
		limit #{start},#{pageSize}
	</select>
	
	<!-- 获得最大数 -->
	<select id="getTotalQuery" parameterType="pageUtil"  resultType="Integer">
		select count(*) from dormitory
		
		where 1=1 
		<foreach collection="where" item="wh">
			and ${wh.parm} ${wh.op} #{wh.value} 
		</foreach>
	</select>

	<!-- 新增 -->
	<insert id="add"  parameterType="dormitory">
		<selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
          	SELECT LAST_INSERT_ID()
      	</selectKey>
		insert into dormitory(buildId,dormNo,dormType,dormSex) 
		values(#{buildId},#{dormNo},#{dormType},#{dormSex})
	</insert>
	
	
	<!-- 修改 -->
	<update id="update" parameterType="dormitory">
		update dormitory 
		set 
			buildId=#{buildId},
			dormNo=#{dormNo},
			dormType=#{dormType},
			dormSex=#{dormSex}
		where id=#{id}
	</update>
	
	<!-- 查看 -->
	<select id="getEntity" parameterType="java.lang.Long" resultType="dormitory">
		select * from dormitory where id=#{id}
	</select>
	
	<!-- 删除  -->
	<delete id="del" parameterType="java.util.List">
		delete from dormitory where id in 
		<foreach collection="list" item="id" index="index" separator="," open="(" close=")">
			#{id}
		</foreach>
	</delete>
	
	
	<!-- 批量删除  -->
	<delete id="delStr" parameterType="java.lang.String">
		delete from dormitory where id in (${ids})
	</delete>
	
	
	<!-- 查看宿舍人员 -->
	<select id="getDormPersons" parameterType="java.lang.Long" resultType="dormPerson">
		select bed.id as bedId,dp1.*,u.`name` as stuName,u.username as stuNo,bed.bedNo,bed.bedType from dormitory dorm
		left join dorm_type dt on dt.id=dorm.dormType
		left join bed on bed.dormType=dt.id
		left join (select dp.* from dorm_person dp where dp.dormId=#{dormId})dp1 on dp1.bedId=bed.id
		left join `user` u on u.id=dp1.stuId
		where dorm.id=#{dormId}
	</select>
	
	<!-- 宿舍添加学生 -->
	<insert id="dormAddPerson" parameterType="dormPerson">
		insert into dorm_person(stuId,dormId,bedId) 
		values(#{stuId},#{dormId},#{bedId})
	</insert>
	
	<!-- 宿舍删除学生 -->
	<delete id="dormRemovePerson" parameterType="java.lang.Long">
		delete from dorm_person where id=#{id}
	</delete>
</mapper>	